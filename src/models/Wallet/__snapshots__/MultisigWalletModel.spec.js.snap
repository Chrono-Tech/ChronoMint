// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Multisig Wallet Model should create new model 1`] = `
Immutable.Record {
  "id": null,
  "timestamp": null,
  "isFetching": false,
  "isFetched": false,
  "transactionHash": null,
  "isPending": false,
  "isFailed": false,
  "address": "a1",
  "tokens": Immutable.Map {
    "t1": Immutable.Record {
      "id": null,
      "timestamp": null,
      "isFetching": false,
      "isFetched": false,
      "transactionHash": null,
      "isPending": false,
      "isFailed": false,
      "dao": null,
      "address": null,
      "decimals": null,
      "name": null,
      "symbol": "TK1",
      "balance": "0",
      "allowance": Immutable.Map {},
      "url": null,
      "icon": null,
      "fee": null,
      "withFee": null,
      "platform": null,
      "totalSupply": "0",
      "managersList": null,
      "isReissuable": null,
      "isOptional": true,
      "feeAddress": null,
    },
    "t2": Immutable.Record {
      "id": null,
      "timestamp": null,
      "isFetching": false,
      "isFetched": false,
      "transactionHash": null,
      "isPending": false,
      "isFailed": false,
      "dao": null,
      "address": null,
      "decimals": null,
      "name": null,
      "symbol": "TK2",
      "balance": "0",
      "allowance": Immutable.Map {},
      "url": null,
      "icon": null,
      "fee": null,
      "withFee": null,
      "platform": null,
      "totalSupply": "0",
      "managersList": null,
      "isReissuable": null,
      "isOptional": true,
      "feeAddress": null,
    },
  },
  "isMultisig": true,
  "transactions": Immutable.Record {
    "id": null,
    "timestamp": null,
    "isFetching": false,
    "isFetched": false,
    "transactionHash": null,
    "isPending": false,
    "isFailed": false,
    "list": Immutable.Map {
      "tx1": Immutable.Record {
        "id": null,
        "timestamp": null,
        "txHash": "hash1",
        "blockHash": null,
        "blockNumber": null,
        "transactionIndex": null,
        "from": null,
        "to": null,
        "by": null,
        "value": "0",
        "time": null,
        "gasPrice": null,
        "gas": null,
        "gasFee": "0",
        "input": null,
        "credited": null,
        "symbol": "",
        "type": "",
        "args": null,
      },
      "tx2": Immutable.Record {
        "id": null,
        "timestamp": null,
        "txHash": "hash2",
        "blockHash": null,
        "blockNumber": null,
        "transactionIndex": null,
        "from": null,
        "to": null,
        "by": null,
        "value": "0",
        "time": null,
        "gasPrice": null,
        "gas": null,
        "gasFee": "0",
        "input": null,
        "credited": null,
        "symbol": "",
        "type": "",
        "args": null,
      },
    },
    "selected": null,
    "endOfList": false,
  },
  "owners": Immutable.List [
    "owner1",
    "owner2",
  ],
  "name": "Wallet Name",
  "requiredSignatures": 2,
  "dao": null,
  "pendingTxList": Immutable.Record {
    "id": null,
    "timestamp": null,
    "isFetching": false,
    "isFetched": false,
    "transactionHash": null,
    "isPending": false,
    "isFailed": false,
    "list": Immutable.Map {
      "tx1": Immutable.Record {
        "id": "tx1",
        "timestamp": null,
        "isFetching": false,
        "isFetched": false,
        "transactionHash": null,
        "isPending": false,
        "isFailed": false,
        "initiator": null,
        "symbol": null,
        "to": null,
        "value": "0",
        "isConfirmed": false,
      },
      "tx2": Immutable.Record {
        "id": "tx2",
        "timestamp": null,
        "isFetching": false,
        "isFetched": false,
        "transactionHash": null,
        "isPending": false,
        "isFailed": false,
        "initiator": null,
        "symbol": null,
        "to": null,
        "value": "0",
        "isConfirmed": false,
      },
    },
    "selected": null,
  },
  "is2FA": false,
}
`;
