// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Multisig Wallet reducer should handle MULTISIG_FETCHED 1`] = `
Immutable.Record {
  "id": null,
  "timestamp": null,
  "isFetching": false,
  "isFetched": true,
  "transactionHash": null,
  "isPending": false,
  "isFailed": false,
  "list": Immutable.Map {
    "a1": Immutable.Record {
      "id": null,
      "timestamp": null,
      "isFetching": false,
      "isFetched": false,
      "transactionHash": null,
      "isPending": false,
      "isFailed": false,
      "address": "a1",
      "tokens": Immutable.Map {},
      "isMultisig": true,
      "transactions": Immutable.Record {
        "id": null,
        "timestamp": null,
        "isFetching": false,
        "isFetched": false,
        "transactionHash": null,
        "isPending": false,
        "isFailed": false,
        "list": Immutable.Map {},
        "selected": null,
        "endOfList": false,
      },
      "owners": Immutable.List [],
      "name": "No name",
      "requiredSignatures": null,
      "dao": null,
      "pendingTxList": Immutable.Record {
        "id": null,
        "timestamp": null,
        "isFetching": false,
        "isFetched": false,
        "transactionHash": null,
        "isPending": false,
        "isFailed": false,
        "list": Immutable.Map {},
        "selected": null,
      },
      "is2FA": false,
    },
    "a2": Immutable.Record {
      "id": null,
      "timestamp": null,
      "isFetching": false,
      "isFetched": false,
      "transactionHash": null,
      "isPending": false,
      "isFailed": false,
      "address": "a2",
      "tokens": Immutable.Map {},
      "isMultisig": true,
      "transactions": Immutable.Record {
        "id": null,
        "timestamp": null,
        "isFetching": false,
        "isFetched": false,
        "transactionHash": null,
        "isPending": false,
        "isFailed": false,
        "list": Immutable.Map {},
        "selected": null,
        "endOfList": false,
      },
      "owners": Immutable.List [],
      "name": "No name",
      "requiredSignatures": null,
      "dao": null,
      "pendingTxList": Immutable.Record {
        "id": null,
        "timestamp": null,
        "isFetching": false,
        "isFetched": false,
        "transactionHash": null,
        "isPending": false,
        "isFailed": false,
        "list": Immutable.Map {},
        "selected": null,
      },
      "is2FA": false,
    },
  },
  "selected": null,
}
`;

exports[`Multisig Wallet reducer should handle MULTISIG_FETCHING 1`] = `
Immutable.Record {
  "id": null,
  "timestamp": null,
  "isFetching": true,
  "isFetched": false,
  "transactionHash": null,
  "isPending": false,
  "isFailed": false,
  "list": Immutable.Map {},
  "selected": null,
}
`;

exports[`Multisig Wallet reducer should handle MULTISIG_REMOVE 1`] = `
Immutable.Record {
  "id": null,
  "timestamp": null,
  "isFetching": false,
  "isFetched": false,
  "transactionHash": null,
  "isPending": false,
  "isFailed": false,
  "list": Immutable.Map {
    "a1": Immutable.Record {
      "id": null,
      "timestamp": null,
      "isFetching": false,
      "isFetched": false,
      "transactionHash": null,
      "isPending": false,
      "isFailed": false,
      "address": "a1",
      "tokens": Immutable.Map {},
      "isMultisig": true,
      "transactions": Immutable.Record {
        "id": null,
        "timestamp": null,
        "isFetching": false,
        "isFetched": false,
        "transactionHash": null,
        "isPending": false,
        "isFailed": false,
        "list": Immutable.Map {},
        "selected": null,
        "endOfList": false,
      },
      "owners": Immutable.List [],
      "name": "No name",
      "requiredSignatures": null,
      "dao": null,
      "pendingTxList": Immutable.Record {
        "id": null,
        "timestamp": null,
        "isFetching": false,
        "isFetched": false,
        "transactionHash": null,
        "isPending": false,
        "isFailed": false,
        "list": Immutable.Map {},
        "selected": null,
      },
      "is2FA": false,
    },
    "a2": Immutable.Record {
      "id": null,
      "timestamp": null,
      "isFetching": false,
      "isFetched": false,
      "transactionHash": null,
      "isPending": false,
      "isFailed": false,
      "address": "a2",
      "tokens": Immutable.Map {},
      "isMultisig": true,
      "transactions": Immutable.Record {
        "id": null,
        "timestamp": null,
        "isFetching": false,
        "isFetched": false,
        "transactionHash": null,
        "isPending": false,
        "isFailed": false,
        "list": Immutable.Map {},
        "selected": null,
        "endOfList": false,
      },
      "owners": Immutable.List [],
      "name": "No name",
      "requiredSignatures": null,
      "dao": null,
      "pendingTxList": Immutable.Record {
        "id": null,
        "timestamp": null,
        "isFetching": false,
        "isFetched": false,
        "transactionHash": null,
        "isPending": false,
        "isFailed": false,
        "list": Immutable.Map {},
        "selected": null,
      },
      "is2FA": false,
    },
  },
  "selected": null,
}
`;

exports[`Multisig Wallet reducer should handle MULTISIG_SELECT 1`] = `
Immutable.Record {
  "id": null,
  "timestamp": null,
  "isFetching": false,
  "isFetched": false,
  "transactionHash": null,
  "isPending": false,
  "isFailed": false,
  "list": Immutable.Map {
    "a1": Immutable.Record {
      "id": null,
      "timestamp": null,
      "isFetching": false,
      "isFetched": false,
      "transactionHash": null,
      "isPending": false,
      "isFailed": false,
      "address": "a1",
      "tokens": Immutable.Map {},
      "isMultisig": true,
      "transactions": Immutable.Record {
        "id": null,
        "timestamp": null,
        "isFetching": false,
        "isFetched": false,
        "transactionHash": null,
        "isPending": false,
        "isFailed": false,
        "list": Immutable.Map {},
        "selected": null,
        "endOfList": false,
      },
      "owners": Immutable.List [],
      "name": "No name",
      "requiredSignatures": null,
      "dao": null,
      "pendingTxList": Immutable.Record {
        "id": null,
        "timestamp": null,
        "isFetching": false,
        "isFetched": false,
        "transactionHash": null,
        "isPending": false,
        "isFailed": false,
        "list": Immutable.Map {},
        "selected": null,
      },
      "is2FA": false,
    },
  },
  "selected": "a1",
}
`;

exports[`Multisig Wallet reducer should handle MULTISIG_UPDATE (update existing wallet) 1`] = `
Immutable.Record {
  "id": null,
  "timestamp": null,
  "isFetching": false,
  "isFetched": false,
  "transactionHash": null,
  "isPending": false,
  "isFailed": false,
  "list": Immutable.Map {
    "a1": Immutable.Record {
      "id": null,
      "timestamp": null,
      "isFetching": false,
      "isFetched": false,
      "transactionHash": null,
      "isPending": false,
      "isFailed": false,
      "address": "a1",
      "tokens": Immutable.Map {
        "t1": Immutable.Record {
          "id": null,
          "timestamp": null,
          "isFetching": false,
          "isFetched": false,
          "transactionHash": null,
          "isPending": false,
          "isFailed": false,
          "dao": null,
          "address": null,
          "decimals": null,
          "name": null,
          "symbol": null,
          "balance": "0",
          "allowance": Immutable.Map {},
          "url": null,
          "icon": null,
          "fee": null,
          "withFee": null,
          "platform": null,
          "totalSupply": "0",
          "managersList": null,
          "isReissuable": null,
          "isOptional": true,
          "feeAddress": null,
        },
      },
      "isMultisig": true,
      "transactions": Immutable.Record {
        "id": null,
        "timestamp": null,
        "isFetching": false,
        "isFetched": false,
        "transactionHash": null,
        "isPending": false,
        "isFailed": false,
        "list": Immutable.Map {},
        "selected": null,
        "endOfList": false,
      },
      "owners": Immutable.List [],
      "name": "No name",
      "requiredSignatures": null,
      "dao": null,
      "pendingTxList": Immutable.Record {
        "id": null,
        "timestamp": null,
        "isFetching": false,
        "isFetched": false,
        "transactionHash": null,
        "isPending": false,
        "isFailed": false,
        "list": Immutable.Map {},
        "selected": null,
      },
      "is2FA": false,
    },
  },
  "selected": null,
}
`;
